name: deploy
on:
  push:
  pull_request:

jobs:

  build_any:
    name: 🛠️ Wheel without compilation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install pypa/build
        run: python -m pip install build --user --upgrade --progress-bar off
      - name: Building
        run: python -m build
      - name: Store distribution
        uses: actions/upload-artifact@v3
        with:
          name: python-dist
          path: dist/*.whl

  build_sdist:
    name: 🛠️ Source Distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Optional, use if you have submodules

      - name: Build Source Distribution
        run: pipx run build --sdist

      - name: Store distribution
        uses: actions/upload-artifact@v3
        with:
          name: python-dist
          path: dist/*.tar.gz

  publish-to-testpypi:
    needs:
      - build_any
      - build_sdist
    name: 📦 Publish distribution to TestPyPI
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/kerch
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-dist
          path: dist/
      - name: Publishing
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    needs:
      - build_any
      - build_sdist
    name: 📦 Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/kerch
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-dist
          path: dist/
      - name: Publishing
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: 📦 Sign and publish to GitHub Release
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-dist
          path: dist
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'